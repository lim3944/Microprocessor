
StaticFND.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  000001a8  0000021c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 00000020  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 0000002d  00000000  00000000  00000250  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   0000022f  00000000  00000000  0000027d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000124  00000000  00000000  000004ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000001ac  00000000  00000000  000005d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  0000077c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000d1  00000000  00000000  0000079c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000060  00000000  00000000  0000086d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  000008cd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 ea       	ldi	r30, 0xA8	; 168
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 31       	cpi	r26, 0x14	; 20
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0e 94 5f 00 	call	0xbe	; 0xbe <main>
  b6:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <main>:
#include<util/delay.h>

const char Font[15]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,};
const char Port[5]={0x01,0x02,0x04,0x08};

int main(void){
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29

	unsigned int a,b,c,d,i;
	DDRA=0xFF;
  c2:	8f ef       	ldi	r24, 0xFF	; 255
  c4:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xFF;
  c6:	87 bb       	out	0x17, r24	; 23
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  cc:	c8 ea       	ldi	r28, 0xA8	; 168
  ce:	d1 e6       	ldi	r29, 0x61	; 97
			a=i/1000;
			b=(i%1000)/100;
			c=(i%100)/10;
			d=i%10;

			PORTB |=0x0F;
  d0:	88 b3       	in	r24, 0x18	; 24
  d2:	8f 60       	ori	r24, 0x0F	; 15
  d4:	88 bb       	out	0x18, r24	; 24
			PORTB &=~Port[3];
  d6:	c3 98       	cbi	0x18, 3	; 24
			PORTA=Font[d];
  d8:	c9 01       	movw	r24, r18
  da:	6a e0       	ldi	r22, 0x0A	; 10
  dc:	70 e0       	ldi	r23, 0x00	; 0
  de:	0e 94 be 00 	call	0x17c	; 0x17c <__udivmodhi4>
  e2:	fc 01       	movw	r30, r24
  e4:	e0 50       	subi	r30, 0x00	; 0
  e6:	ff 4f       	sbci	r31, 0xFF	; 255
  e8:	80 81       	ld	r24, Z
  ea:	8b bb       	out	0x1b, r24	; 27
  ec:	ce 01       	movw	r24, r28
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <main+0x30>
			_delay_ms(100);

			PORTB |=0x0F;
  f2:	88 b3       	in	r24, 0x18	; 24
  f4:	8f 60       	ori	r24, 0x0F	; 15
  f6:	88 bb       	out	0x18, r24	; 24
			PORTB &=~Port[2];
  f8:	c2 98       	cbi	0x18, 2	; 24
			PORTA=Font[c];
  fa:	c9 01       	movw	r24, r18
  fc:	64 e6       	ldi	r22, 0x64	; 100
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	0e 94 be 00 	call	0x17c	; 0x17c <__udivmodhi4>
 104:	6a e0       	ldi	r22, 0x0A	; 10
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	0e 94 be 00 	call	0x17c	; 0x17c <__udivmodhi4>
 10c:	fb 01       	movw	r30, r22
 10e:	e0 50       	subi	r30, 0x00	; 0
 110:	ff 4f       	sbci	r31, 0xFF	; 255
 112:	80 81       	ld	r24, Z
 114:	8b bb       	out	0x1b, r24	; 27
 116:	ce 01       	movw	r24, r28
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <main+0x5a>
			_delay_ms(100);

			PORTB |=0x0F;
 11c:	88 b3       	in	r24, 0x18	; 24
 11e:	8f 60       	ori	r24, 0x0F	; 15
 120:	88 bb       	out	0x18, r24	; 24
			PORTB &=~Port[1];
 122:	c1 98       	cbi	0x18, 1	; 24
			PORTA=Font[b];
 124:	c9 01       	movw	r24, r18
 126:	68 ee       	ldi	r22, 0xE8	; 232
 128:	73 e0       	ldi	r23, 0x03	; 3
 12a:	0e 94 be 00 	call	0x17c	; 0x17c <__udivmodhi4>
 12e:	64 e6       	ldi	r22, 0x64	; 100
 130:	70 e0       	ldi	r23, 0x00	; 0
 132:	0e 94 be 00 	call	0x17c	; 0x17c <__udivmodhi4>
 136:	fb 01       	movw	r30, r22
 138:	e0 50       	subi	r30, 0x00	; 0
 13a:	ff 4f       	sbci	r31, 0xFF	; 255
 13c:	80 81       	ld	r24, Z
 13e:	8b bb       	out	0x1b, r24	; 27
 140:	ce 01       	movw	r24, r28
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <main+0x84>
			_delay_ms(100);

			PORTB |=0x0F;
 146:	88 b3       	in	r24, 0x18	; 24
 148:	8f 60       	ori	r24, 0x0F	; 15
 14a:	88 bb       	out	0x18, r24	; 24
			PORTB &=~Port[0];
 14c:	c0 98       	cbi	0x18, 0	; 24
			PORTA=Font[a];
 14e:	c9 01       	movw	r24, r18
 150:	68 ee       	ldi	r22, 0xE8	; 232
 152:	73 e0       	ldi	r23, 0x03	; 3
 154:	0e 94 be 00 	call	0x17c	; 0x17c <__udivmodhi4>
 158:	fb 01       	movw	r30, r22
 15a:	e0 50       	subi	r30, 0x00	; 0
 15c:	ff 4f       	sbci	r31, 0xFF	; 255
 15e:	80 81       	ld	r24, Z
 160:	8b bb       	out	0x1b, r24	; 27
 162:	ce 01       	movw	r24, r28
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <main+0xa6>
	unsigned int a,b,c,d,i;
	DDRA=0xFF;
	DDRB=0xFF;

	while(1){
		for(i=0;i<=9999;i++){
 168:	2f 5f       	subi	r18, 0xFF	; 255
 16a:	3f 4f       	sbci	r19, 0xFF	; 255
 16c:	87 e2       	ldi	r24, 0x27	; 39
 16e:	20 31       	cpi	r18, 0x10	; 16
 170:	38 07       	cpc	r19, r24
 172:	08 f4       	brcc	.+2      	; 0x176 <main+0xb8>
 174:	ad cf       	rjmp	.-166    	; 0xd0 <main+0x12>
 176:	20 e0       	ldi	r18, 0x00	; 0
 178:	30 e0       	ldi	r19, 0x00	; 0
 17a:	aa cf       	rjmp	.-172    	; 0xd0 <main+0x12>

0000017c <__udivmodhi4>:
 17c:	aa 1b       	sub	r26, r26
 17e:	bb 1b       	sub	r27, r27
 180:	51 e1       	ldi	r21, 0x11	; 17
 182:	07 c0       	rjmp	.+14     	; 0x192 <__udivmodhi4_ep>

00000184 <__udivmodhi4_loop>:
 184:	aa 1f       	adc	r26, r26
 186:	bb 1f       	adc	r27, r27
 188:	a6 17       	cp	r26, r22
 18a:	b7 07       	cpc	r27, r23
 18c:	10 f0       	brcs	.+4      	; 0x192 <__udivmodhi4_ep>
 18e:	a6 1b       	sub	r26, r22
 190:	b7 0b       	sbc	r27, r23

00000192 <__udivmodhi4_ep>:
 192:	88 1f       	adc	r24, r24
 194:	99 1f       	adc	r25, r25
 196:	5a 95       	dec	r21
 198:	a9 f7       	brne	.-22     	; 0x184 <__udivmodhi4_loop>
 19a:	80 95       	com	r24
 19c:	90 95       	com	r25
 19e:	bc 01       	movw	r22, r24
 1a0:	cd 01       	movw	r24, r26
 1a2:	08 95       	ret

000001a4 <_exit>:
 1a4:	f8 94       	cli

000001a6 <__stop_program>:
 1a6:	ff cf       	rjmp	.-2      	; 0x1a6 <__stop_program>
